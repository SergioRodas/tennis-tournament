services:
   # Backend (PHP-FPM)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - ./backend:/var/www/html
    networks:
      - symfony-network

  # Nginx (Servidor web)
  webserver:
    image: nginx:alpine
    container_name: nginx_web
    restart: unless-stopped
    ports:
      - '8000:80'
    volumes:
      - ./backend:/var/www/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - symfony-network

  # Frontend (React)
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - symfony-network

  # Database (MySQL)
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - symfony-network

# Vol√∫menes para datos persistentes
volumes:
  db_data:

# Red compartida entre los servicios
networks:
  symfony-network:
    driver: bridge
